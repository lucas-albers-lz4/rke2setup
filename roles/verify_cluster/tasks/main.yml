---
- name: Ensure kubectl directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ kubectl.config.root | dirname }}"
    - "{{ kubectl.config.user | dirname }}"

- name: Create symlinks for kubectl config
  ansible.builtin.file:
    src: "{{ kubectl.config.source }}"
    dest: "{{ item }}"
    state: link
    force: true
  loop:
    - "{{ kubectl.config.root }}"
    - "{{ kubectl.config.user }}"

- name: Set KUBECONFIG environment variable
  ansible.builtin.lineinfile:
    path: "{{ item }}"
    line: "export KUBECONFIG={{ kubectl.config.source }}"
    regexp: "^export KUBECONFIG="
    create: true
  loop:
    - "{{ paths.system.root_bashrc }}"
    - "{{ paths.user.bashrc }}"

- name: Verify kubectl configuration
  ansible.builtin.stat:
    path: "{{ kubectl.config.source }}"
  register: kubeconfig_stat

- name: Fail if kubeconfig doesn't exist
  ansible.builtin.fail:
    msg: "RKE2 kubeconfig not found at {{ kubectl.config.source }}"
  when: not kubeconfig_stat.stat.exists

- name: Verify cluster status
  environment:
    KUBECONFIG: "{{ kubectl.config.source }}"
  block:
    - name: Check node status
      ansible.builtin.command: "{{ kubectl.command }} get nodes -o wide"
      register: nodes_status
      changed_when: false

    - name: Check control plane pods
      ansible.builtin.command: "{{ kubectl.command }} get pods -n kube-system -l tier=control-plane -o wide"
      register: control_plane_pods
      changed_when: false

    - name: Display cluster status
      ansible.builtin.debug:
        msg:
          - "Nodes Status:"
          - "{{ nodes_status.stdout_lines }}"
          - ""
          - "Control Plane Pods:"
          - "{{ control_plane_pods.stdout_lines }}"
