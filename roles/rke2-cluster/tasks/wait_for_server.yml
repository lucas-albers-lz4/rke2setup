---
- name: Check if node is already ready
  command: /var/lib/rancher/rke2/bin/kubectl get nodes k7 -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}'
  register: node_status
  ignore_errors: yes

- name: Wait for node to be ready
  shell: |
    export KUBECONFIG={{ paths.rke2.kubeconfig }}
    {{ commands.kubectl }} get nodes {{ inventory_hostname | lower }} -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}'
  register: node_status
  until: node_status.stdout == "True"
  retries: "{{ wait_config.retries }}"
  delay: "{{ wait_config.delay }}"
  when: node_status.stdout != "True"

- name: Debug - Show node status
  debug:
    var: node_status.stdout
  when: node_status is defined

- name: Debug - Server readiness check
  debug:
    msg:
      - "Checking readiness for node: {{ inventory_hostname }}"
      - "KUBECONFIG path: /etc/rancher/rke2/rke2.yaml"

- name: Check if RKE2 service is running
  service:
    name: rke2-server
    state: started
  register: rke2_service
  ignore_errors: yes

- name: Debug - RKE2 service status
  debug:
    msg: "RKE2 service status: {{ rke2_service.state }}"

- name: Wait for kubeconfig file
  wait_for:
    path: /etc/rancher/rke2/rke2.yaml
    state: present
    timeout: 300
  register: kubeconfig_wait

- name: Debug - Kubeconfig wait result
  debug:
    var: kubeconfig_wait
