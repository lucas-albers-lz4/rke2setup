---
- name: Check for pending package updates
  command: needs-restarting -r
  register: updates_pending
  failed_when: false
  changed_when: false

- name: Record uptime before reboot
  shell: cat /proc/uptime | awk '{print $1}'
  register: uptime_before
  changed_when: false

- name: Sync filesystems before reboot
  command: sync
  changed_when: false

- name: Schedule reboot with warning
  reboot:
    msg: "System reboot initiated by Ansible"
    pre_reboot_delay: 10
    post_reboot_delay: 30
    reboot_timeout: "{{ timeout_reboot }}"
    test_command: uptime

- name: Post-reboot verification
  block:
    - name: Get uptime after reboot
      shell: cat /proc/uptime | awk '{print $1}'
      register: uptime_after
      changed_when: false

    - name: Verify system services are running
      service:
        name: "{{ item }}"
        state: started
      loop:
        - systemd-journald
        - ssh
      register: service_status
      retries: "{{ retry_standard }}"
      delay: "{{ retry_delay }}"
      until: service_status is success

    - name: Check system status
      shell: systemctl is-system-running
      register: system_status
      changed_when: false
      failed_when: false

    - name: Debug reboot status
      debug:
        msg: |
          Host: {{ inventory_hostname }}
          Uptime before: {{ uptime_before.stdout }}
          Uptime after: {{ uptime_after.stdout }}
          Reboot verified: {{ uptime_after.stdout | float < uptime_before.stdout | float }}
          System status: {{ system_status.stdout }}
          Updates pending: {{ updates_pending.rc == 100 }}
          Services status: {{ service_status }}

  rescue:
    - name: Report failed post-reboot checks
      fail:
        msg: "Post-reboot verification failed for {{ inventory_hostname }}"
