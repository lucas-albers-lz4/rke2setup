---
- name: Verify RKE2 installation result
  block:
    - name: Check installation script result
      ansible.builtin.assert:
        that:
          - install_result.rc == 0
          - "'unpacking tarball file to /usr/local' in install_result.stdout"
        fail_msg: |
          RKE2 installation failed:
          RC: {{ install_result.rc }}
          stdout: {{ install_result.stdout }}
          stderr: {{ install_result.stderr }}
        success_msg: "RKE2 installation script completed successfully"
      when: install_result is defined

    - name: Check essential RKE2 files
      ansible.builtin.stat:
        path: "{{ item }}"
      loop:
        - /usr/local/bin/rke2
        - /var/lib/rancher/rke2/bin/kubectl
        - /etc/rancher/rke2
      register: rke2_files

    - name: Debug file status
      ansible.builtin.debug:
        msg: "File {{ item.item }} exists: {{ item.stat.exists }}"
      loop: "{{ rke2_files.results }}"

    - name: Start RKE2 service
      ansible.builtin.systemd:
        name: rke2-server
        state: started
        enabled: true
        daemon_reload: true
      become: true
      register: service_start

    - name: Debug service status
      ansible.builtin.debug:
        var: service_start

    - name: Wait for RKE2 files to be created
      ansible.builtin.wait_for:
        path: "{{ item }}"
        state: present
        timeout: "{{ timeout_standard }}"
      loop:
        - /var/lib/rancher/rke2/bin/kubectl
        - /usr/local/bin/rke2
      register: wait_result

    - name: Verify all required files exist
      ansible.builtin.assert:
        that:
          - rke2_files.results | map(attribute='stat.exists') | select('true') | list | length == rke2_files.results | length
        msg: "Some required RKE2 files are missing"
      register: verification_result
      ignore_errors: true # Continue for debugging

    - name: Display verification failure details
      when: not verification_result.failed
      ansible.builtin.debug:
        msg:
          - "Missing files:"
          - "{{ rke2_files.results | selectattr('stat.exists', 'equalto', false) | map(attribute='item') | list }}"

    - name: Check service initialization
      block:
        - name: Create diagnostics file
          ansible.builtin.file:
            path: /tmp/rke2-diagnostics.log
            state: touch
            mode: "0644"
          become: true

        - name: Collect service initialization details
          ansible.builtin.shell: |
            echo -e "\n=== Service Initialization Details ===" >> /tmp/rke2-diagnostics.log
            systemctl show rke2-server --property=StatusText,LoadState,ActiveState >> /tmp/rke2-diagnostics.log
          become: true
          register: service_init

        - name: Display service initialization details
          ansible.builtin.command: cat /tmp/rke2-diagnostics.log
          register: diagnostics_output
          become: true

        - name: Show diagnostics
          ansible.builtin.debug:
            msg: "{{ diagnostics_output.stdout_lines }}"

        - name: Clean up diagnostics file
          ansible.builtin.file:
            path: /tmp/rke2-diagnostics.log
            state: absent
          become: true
