---
- name: Gather system information
  ansible.builtin.setup:
    gather_subset:
      - hardware
      - network

- name: Final preflight checks
  ansible.builtin.debug:
    msg:
      - "Hostname: {{ inventory_hostname }}"
      - "Primary IP: {{ ansible_default_ipv4.address }}"
      - "CPU Cores: {{ ansible_processor_vcpus }}"
      - "Total Memory: {{ ansible_memtotal_mb }} MB"

- name: Set memory requirement based on node type
  ansible.builtin.set_fact:
    required_memory_mb: "{{ 3800 if inventory_hostname in groups['control_plane_nodes'] else 1800 | int }}"

- name: Verify minimum requirements
  ansible.builtin.assert:
    that:
      - ansible_processor_vcpus >= 2
      - ansible_memtotal_mb | int >= required_memory_mb | int
    fail_msg: |
      System does not meet minimum requirements:
      Required: 
      - 2 CPU cores
      - {{ '4GB RAM (Control Plane)' if inventory_hostname in groups['control_plane_nodes'] else '2GB RAM (Worker)' }}

      Found: 
      - {{ ansible_processor_vcpus }} cores
      - {{ ansible_memtotal_mb }}MB RAM

- name: Check available disk space
  ansible.builtin.assert:
    that: 
      - (ansible_mounts | selectattr('mount', 'equalto', '/') | first).size_available / 1024 / 1024 / 1024 >= 1
    fail_msg: "At least 1GB of free disk space is required"

- name: Ensure UFW is disabled
  become: true
  block:
    - name: Stop UFW service
      ansible.builtin.systemd:
        name: ufw
        state: stopped
        enabled: false
      register: ufw_stop
      failed_when: false

    - name: Disable UFW
      ansible.builtin.command: ufw disable
      register: ufw_disable
      changed_when: "'Firewall stopped and disabled on system startup' in ufw_disable.stdout"
      failed_when: false

    - name: Verify UFW is disabled
      ansible.builtin.command: ufw status
      register: ufw_status
      failed_when: "'Status: active' in ufw_status.stdout"
      changed_when: false
