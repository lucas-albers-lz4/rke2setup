---
- name: Collect cluster health information
  block:
    - name: Check node status
      ansible.builtin.command:
        cmd: kubectl get nodes -o wide
      environment:
        KUBECONFIG: "{{ paths.rke2.kubeconfig }}"
      register: node_status
      changed_when: false
      become: true
      delegate_to: "{{ groups['control_plane_nodes'][0] }}"

    - name: Check control plane pods
      ansible.builtin.command:
        cmd: kubectl get pods -n kube-system -l tier=control-plane -o wide
      environment:
        KUBECONFIG: "{{ paths.rke2.kubeconfig }}"
      register: pod_status
      changed_when: false
      become: true
      delegate_to: "{{ groups['control_plane_nodes'][0] }}"

    - name: Check etcd health
      ansible.builtin.command:
        cmd: kubectl get --raw /healthz/etcd
      environment:
        KUBECONFIG: "{{ paths.rke2.kubeconfig }}"
      register: etcd_health
      changed_when: false
      become: true
      delegate_to: "{{ groups['control_plane_nodes'][0] }}"

    - name: Check API server health
      ansible.builtin.command:
        cmd: kubectl get --raw /healthz
      environment:
        KUBECONFIG: "{{ paths.rke2.kubeconfig }}"
      register: apiserver_health
      changed_when: false
      become: true
      delegate_to: "{{ groups['control_plane_nodes'][0] }}"

    - name: Verify required pods are running
      ansible.builtin.shell:
        cmd: |
          KUBECONFIG={{ paths.rke2.kubeconfig }} {{ paths.rke2.bin }}/kubectl get pods -n kube-system | grep -q "{{ item }}"
      register: pod_check
      until: pod_check.rc == 0
      retries: 30
      delay: 10
      changed_when: false
      failed_when: false
      become: true
      delegate_to: "{{ groups['control_plane_nodes'][0] }}"
      with_items:
        - "kube-apiserver"
        - "kube-controller-manager"
        - "kube-scheduler"
        - "etcd"
      when: inventory_hostname in groups['control_plane_nodes']

    - name: Display cluster health summary
      ansible.builtin.debug:
        msg:
          - "=== RKE2 Cluster Health Summary ==="
          - "API Server: {{ 'HEALTHY' if 'ok' in apiserver_health.stdout else 'UNHEALTHY' }}"
          - "Etcd: {{ 'HEALTHY' if 'ok' in etcd_health.stdout else 'UNHEALTHY' }}"
          - ""
          - "=== Nodes ==="
          - "{{ node_status.stdout_lines }}"
          - ""
          - "=== Control Plane Pods ==="
          - "{{ pod_status.stdout_lines }}"
