---
- name: Create RKE2 config directory for additional control planes
  ansible.builtin.file:
    path: "{{ paths.rke2.config }}"
    state: directory
    mode: "0755"
    owner: root
    group: root
  become: true

- name: Configure additional control plane nodes
  ansible.builtin.template:
    src: config.yaml.j2
    dest: "{{ paths.rke2.config }}/config.yaml"
    mode: "0644"
    owner: root
    group: root
  become: true

- name: Download RKE2 installation script
  ansible.builtin.get_url:
    url: https://get.rke2.io
    dest: /tmp/rke2-install.sh
    mode: "0755"
  become: true

- name: Install RKE2 server
  block:
    - name: Execute installation script
      ansible.builtin.shell: |
        INSTALL_RKE2_TYPE=server bash /tmp/rke2-install.sh
      become: true
      register: install_result

    - name: Start RKE2 service
      ansible.builtin.systemd:
        name: rke2-server
        state: started
        enabled: true
        daemon_reload: true
      become: true

    - name: Wait for RKE2 to initialize
      ansible.builtin.wait_for:
        timeout: 30

    - name: Ensure RKE2 directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      become: true
      loop:
        - "{{ paths.rke2.bin }}"
        - "{{ paths.system.bin }}"
        - "{{ paths.rke2.config }}"

    - name: Wait for critical files
      ansible.builtin.wait_for:
        path: "{{ item }}"
        state: present
        timeout: 60
      loop:
        - "{{ paths.rke2.bin }}/kubectl"
        - "{{ paths.system.bin }}/rke2"
      register: file_wait
  rescue:
    - name: Collect debug information
      block:
        - name: Get service status
          ansible.builtin.command: systemctl status rke2-server --no-pager
          become: true
          register: service_status
          ignore_errors: true

        - name: Get installation logs
          ansible.builtin.command: journalctl -u rke2-server --no-pager -n 20
          become: true
          register: install_logs
          ignore_errors: true

        - name: Display debug information
          ansible.builtin.debug:
            msg:
              - "Installation Result: {{ install_result | default('N/A') }}"
              - "Service Status: {{ service_status.stdout_lines | default([]) }}"
              - "Install Logs: {{ install_logs.stdout_lines | default([]) }}"

        - name: Fail with detailed message
          ansible.builtin.fail:
            msg: "RKE2 installation failed. Check the debug information above."

- name: Verify RKE2 installation
  include_tasks: verify_installation.yml

- name: Check RKE2 service status
  include_tasks: verify_rke2_service.yml

- name: Wait for first control plane readiness
  ansible.builtin.include_tasks: wait_for_server.yml

- name: Enable and start RKE2 server
  block:
    - name: Start RKE2 server service
      ansible.builtin.systemd:
        name: rke2-server
        enabled: true
        state: started
        daemon_reload: true
      register: rke2_service
      until: rke2_service is success
      retries: "{{ retry_standard }}"
      delay: "{{ retry_delay }}"

    - name: Wait for local node readiness
      ansible.builtin.shell: |
        {{ paths.rke2.bin }}/kubectl get nodes {{ inventory_hostname | lower }} \
          -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}'
      environment:
        KUBECONFIG: "{{ paths.rke2.kubeconfig }}"
      register: node_ready
      until: node_ready.stdout == "True"
      retries: "{{ retry_extended }}"
      delay: "{{ retry_delay }}"
      changed_when: false
      become: true

- name: Verify RKE2 server installation
  ansible.builtin.stat:
    path: "{{ item }}"
  register: rke2_files
  with_items:
    - "{{ commands.rke2 }}"
    - "{{ paths.rke2.data }}/bin/rke2"
    - "{{ paths.rke2.config }}"

- name: Debug RKE2 file status
  ansible.builtin.debug:
    msg: "{{ item.item }} exists: {{ item.stat.exists }}"
  loop: "{{ rke2_files.results }}"

- name: Validate token before configuration
  block:
    - name: Debug token availability
      ansible.builtin.debug:
        msg:
          - "Token status: {{ rke2_token is defined }}"
          - "Token length: {{ rke2_token | default('UNDEFINED') | length }}"
          - "Current host: {{ inventory_hostname }}"
          - "First control plane: {{ groups['control_plane_nodes'][0] }}"

    - name: Fail with detailed token information if undefined
      ansible.builtin.fail:
        msg: |
          CRITICAL: RKE2 token is undefined
          Possible causes:
          - Token generation failed in first_control_plane.yml
          - Fact sharing between hosts did not work
          - Playbook run order is incorrect

          Debugging steps:
          1. Verify first_control_plane.yml runs successfully
          2. Check fact gathering settings
          3. Ensure token is set on first control plane node
          4. Run with -vvv for more details

- name: Verify token from first control plane
  ansible.builtin.debug:
    msg:
      - "First control plane: {{ groups['control_plane_nodes'][0] }}"
      - "Token from first CP: {{ hostvars[groups['control_plane_nodes'][0]].rke2_token | default('UNDEFINED') }}"
  when: inventory_hostname != groups['control_plane_nodes'][0]

- name: Check node registration
  shell: |
    echo -e "\n=== Node Registration Status ===" >> /tmp/rke2-diagnostics.log
    if [ -f "{{ paths.rke2.kubeconfig }}" ]; then
      {{ paths.rke2.bin }}/kubectl get nodes {{ inventory_hostname | lower }} -o yaml \
        --kubeconfig={{ paths.rke2.kubeconfig }} >> /tmp/rke2-diagnostics.log
    fi
  ignore_errors: true
