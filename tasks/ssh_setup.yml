---
- name: Ensure .ssh directory exists
  ansible.builtin.file:
    path: ~/.ssh
    state: directory
    mode: '0700'

- name: Generate SSH key for first control plane node
  ansible.builtin.command:
    cmd: ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ''
  args:
    creates: ~/.ssh/id_rsa
  when: inventory_hostname == (groups['three_node_control_plane'][0] if cluster_type == 'three_node' else groups['control_plane_nodes'][0])

- name: Get public key from first control plane
  ansible.builtin.slurp:
    src: ~/.ssh/id_rsa.pub
  register: public_key_content
  when: inventory_hostname == (groups['three_node_control_plane'][0] if cluster_type == 'three_node' else groups['control_plane_nodes'][0])

- name: Set public key fact
  ansible.builtin.set_fact:
    control_plane_public_key: "{{ hostvars[groups['three_node_control_plane'][0] if cluster_type == 'three_node' else groups['control_plane_nodes'][0]]['public_key_content']['content'] | b64decode }}"
  when: inventory_hostname != (groups['three_node_control_plane'][0] if cluster_type == 'three_node' else groups['control_plane_nodes'][0])

- name: Add control plane public key to authorized keys
  ansible.builtin.authorized_key:
    user: "{{ ansible_user }}"
    state: present
    key: "{{ control_plane_public_key }}"
  when: inventory_hostname != (groups['three_node_control_plane'][0] if cluster_type == 'three_node' else groups['control_plane_nodes'][0])
