---
- name: Create RKE2 config directory on additional control planes
  ansible.builtin.file:
    path: /etc/rancher/rke2
    state: directory
    mode: '0755'

- name: Configure additional control plane nodes
  ansible.builtin.template:
    src: config.yaml.j2
    dest: /etc/rancher/rke2/config.yaml
    mode: '0644'
  vars:
    node_type: server
    is_first_server: false

- name: Download RKE2 installation script
  ansible.builtin.get_url:
    url: https://get.rke2.io
    dest: /tmp/install.sh
    mode: '0755'

- name: Install RKE2 on additional control planes
  ansible.builtin.command: 
    cmd: INSTALL_RKE2_VERSION={{ rke2_version }} /tmp/install.sh
  args:
    creates: /usr/local/bin/rke2

- name: Verify RKE2 installation
  ansible.builtin.command:
    cmd: rke2 --version
  register: rke2_version_check
  failed_when: rke2_version_check.rc != 0
  changed_when: false

- name: Start and enable RKE2 server service on additional control planes
  ansible.builtin.systemd:
    name: rke2-server
    state: started
    enabled: yes
    daemon_reload: yes

- name: Verify RKE2 server service status
  ansible.builtin.systemd:
    name: rke2-server
    state: started
  register: service_status
  until: service_status.status.ActiveState == "active"
  retries: 5
  delay: 10

- name: Wait for node to be ready
  ansible.builtin.command: 
    cmd: kubectl get nodes
  environment:
    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
  register: node_status
  until: node_status.rc == 0
  retries: 30
  delay: 10
  changed_when: false

- name: Create kubectl symlink
  ansible.builtin.file:
    src: "{{ rke2_binary_path }}/kubectl"
    dest: "{{ kubectl_path }}"
    state: link

- name: Verify kubectl symlink
  ansible.builtin.stat:
    path: "{{ kubectl_path }}"
  register: kubectl_link
  failed_when: not kubectl_link.stat.exists or not kubectl_link.stat.islnk
