---
- name: RKE2 Cluster Cleanup Playbook
  hosts: six_node_cluster
  become: true
  gather_facts: false
  strategy: linear

  tasks:
    - name: Warning - RKE2 will be removed
      ansible.builtin.pause:
        prompt: "This will completely remove RKE2 from all nodes (control plane and workers). Press ENTER to continue or CTRL+C to abort"
      delegate_to: localhost
      run_once: true

    - name: Stop RKE2 services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        enabled: false
      loop:
        - rke2-server
        - rke2-agent
      failed_when: false

    - name: Run RKE2 uninstall script if exists
      ansible.builtin.command: 
        cmd: /usr/local/bin/rke2-uninstall.sh
        removes: /usr/local/bin/rke2-uninstall.sh
      failed_when: false

    - name: Kill remaining RKE2-related processes
      ansible.builtin.shell: |
        pkill -f "journalctl.*rke2" || true
        pkill -f "rke2" || true
        pkill -f "containerd" || true
      args:
        executable: /bin/bash
      changed_when: false
      failed_when: false

    - name: Pause to allow processes to terminate
      ansible.builtin.wait_for:
        timeout: 10
        
    - name: Remove RKE2 configuration and data directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/rancher/rke2
        - /var/lib/rancher/rke2
        - /var/lib/kubelet
        - /usr/local/bin/rke2
        - /usr/local/bin/kubectl
        - /home/ubuntu/.kube
        - /run/k3s
        - /run/flannel
      failed_when: false

    - name: Verify directory removal
      ansible.builtin.stat:
        path: "{{ item }}"
      loop:
        - /etc/rancher/rke2
        - /var/lib/rancher/rke2
        - /var/lib/kubelet
        - /usr/local/bin/rke2
        - /usr/local/bin/kubectl
        - /home/ubuntu/.kube
      register: dir_check
      failed_when: false

    - name: Log directories that could not be removed
      ansible.builtin.debug:
        msg: "Could not remove directory: {{ item.item }}"
      loop: "{{ dir_check.results }}"
      when: item.stat.exists
