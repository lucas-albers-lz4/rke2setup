---
- name: Verify Host Information and Connectivity
  hosts: all
  gather_facts: true
  tasks:
    - name: Set expected IP from inventory
      ansible.builtin.set_fact:
        expected_ip: "{{ ansible_host }}"

    - name: Get all IP addresses
      # Exclude 10.42.x.x (RKE2's internal cluster network) and loopback addresses
      # - 10.42.0.0/16 is RKE2's default cluster CIDR for pod networking
      # - Including these IPs would cause false positive conflict detection
      # - We only care about the host's primary network interfaces
      ansible.builtin.shell: |
        ip addr show | grep -w inet | awk '{print $2}' | cut -d'/' -f1 | grep -v '^10.42' | grep -v '^127.'
      register: real_ips
      changed_when: false

    - name: Set fact for IP conflicts
      ansible.builtin.set_fact:
        ip_conflicts: "{{ 'Not Detected' if (ansible_host in real_ips.stdout_lines) and (real_ips.stdout_lines | select('match', '^192.168') | list | length == 1)
          else 'Detected' }}"

    - name: Get hosts file content
      ansible.builtin.command: cat /etc/hosts
      register: hosts_file
      changed_when: false

    - name: Get DNS resolution details
      ansible.builtin.shell: |
        #!/bin/bash
        set -o pipefail
        echo "=== getent hosts ==="
        getent hosts {{ inventory_hostname }} || echo "No getent entry found"
        echo -e "\n=== nslookup ==="
        nslookup {{ inventory_hostname }} || echo "No DNS entry found"
      args:
        executable: /bin/bash
      register: dns_details
      changed_when: false
      ignore_errors: true

    - name: Display verification results
      ansible.builtin.debug:
        msg:
          - "=== Host Verification Report ==="
          - "Host: {{ inventory_hostname }}"
          - "System Hostname: {{ ansible_hostname }}"
          - "Expected IP: {{ expected_ip }}"
          - "All IPs: {{ real_ips.stdout_lines | join(', ') }}"
          - "=== /etc/hosts content ==="
          - "{{ hosts_file.stdout }}"
          - "=== DNS Resolution Details ==="
          - "{{ dns_details.stdout }}"
          - "IP Conflicts: {{ ip_conflicts }}"
          - "Status: {{ 'PASS' if (ansible_hostname | lower == inventory_hostname | lower) and (expected_ip in real_ips.stdout_lines) and (dns_details.rc == 0) and
            (ip_conflicts == 'Not Detected') else 'FAIL' }}"

    - name: Fail if verification issues detected
      ansible.builtin.fail:
        msg: |-
          Host verification failed for {{ inventory_hostname }}:
          {%- if ip_conflicts == 'Detected' %}
          - IP conflict detected{%- endif %}
          {%- if dns_details.rc != 0 %}
          - DNS resolution failed{%- endif %}
          {%- if ansible_hostname | lower != inventory_hostname | lower %}
          - Hostname mismatch{%- endif %}
      when: >-
        ip_conflicts == 'Detected' or
        dns_details.rc != 0 or
        ansible_hostname | lower != inventory_hostname | lower or
        expected_ip not in real_ips.stdout_lines
